type Condition @entity {
  id: ID!
  outcomeSlotCount: BigInt!
  payouts: [BigDecimal!]
  fixedProductMarketMakers: [FixedProductMarketMaker!]! @derivedFrom(field: "conditions")
}

type FixedProductMarketMaker @entity {
  id: ID!

  creator: Bytes!
  creationTimestamp: BigInt!

  collateralToken: Bytes!
  conditions: [Condition!]!
  fee: BigInt!

  collateralVolume: BigInt!
  outcomeTokenAmounts: [BigInt!]!

  poolMembers: [FpmmPoolMembership!] @derivedFrom(field: "pool")
}

type FpmmPoolMembership @entity {
  id: ID!
  pool: FixedProductMarketMaker!
  funder: Account!
  amount: BigInt!
}

type Account @entity {
  id: ID!
  fpmmPoolMemberships: [FpmmPoolMembership!] @derivedFrom(field: "funder")
}
