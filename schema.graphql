type Question @entity {
  id: ID!

  data: String!
  title: String
  outcomes: [String!]
  category: String
  language: String

  arbitrator: Bytes!
  openingTimestamp: BigInt!
  timeout: BigInt!

  currentAnswer: Bytes
  currentAnswerBond: BigInt
  currentAnswerTimestamp: BigInt

  isPendingArbitration: Boolean!
  arbitrationOccurred: Boolean!

  answerFinalizedTimestamp: BigInt

  indexedFixedProductMarketMakers: [FixedProductMarketMaker!]!

  conditions: [Condition!]! @derivedFrom(field: "question")
}

type Condition @entity {
  id: ID!
  oracle: Bytes!
  questionId: Bytes!
  question: Question
  outcomeSlotCount: BigInt!
  resolutionTimestamp: BigInt
  payouts: [BigDecimal!]
  fixedProductMarketMakers: [FixedProductMarketMaker!]! @derivedFrom(field: "conditions")
}

type FixedProductMarketMaker @entity {
  id: ID!

  creator: Bytes!
  creationTimestamp: BigInt!

  collateralToken: Bytes!
  conditions: [Condition!]!
  fee: BigInt!

  collateralVolume: BigInt!
  outcomeTokenAmounts: [BigInt!]!

  indexedOnQuestion: Boolean!

  # copy of conditions' content if it is a 1-large array
  condition: Condition
  # lifted from condition
  question: Question
  # lifted from condition's question
  data: String
  title: String
  outcomes: [String!]
  category: String
  language: String
  arbitrator: Bytes
  openingTimestamp: BigInt
  timeout: BigInt
  # pushed from condition & question if this fpmm one of the first
  resolutionTimestamp: BigInt
  payouts: [BigDecimal!]
  currentAnswer: Bytes
  currentAnswerBond: BigInt
  currentAnswerTimestamp: BigInt
  isPendingArbitration: Boolean
  arbitrationOccurred: Boolean
  answerFinalizedTimestamp: BigInt

  poolMembers: [FpmmPoolMembership!] @derivedFrom(field: "pool")
}

type FpmmPoolMembership @entity {
  id: ID!
  pool: FixedProductMarketMaker!
  funder: Account!
  amount: BigInt!
}

type Account @entity {
  id: ID!
  fpmmPoolMemberships: [FpmmPoolMembership!] @derivedFrom(field: "funder")
}
